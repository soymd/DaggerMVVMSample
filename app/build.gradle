plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.github.soymd.daggermvvm"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        compose = true
        composeOptions.kotlinCompilerExtensionVersion = "1.0.1"
        composeOptions.kotlinCompilerVersion = "1.5.21"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // recycler view
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    def fragment_version = "1.2.5"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // robolectric
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "androidx.test:runner:1.3.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"

    // mockk
    testImplementation "io.mockk:mockk:1.12.0"

//    def dagger_version = "2.25"
//    kapt "com.google.dagger:dagger-compiler:$dagger_version"
//    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
//    implementation "com.google.dagger:dagger:$dagger_version"
//    implementation "com.google.dagger:dagger-android:$dagger_version"
//    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    def dagger_hilt_version = "2.36"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    testImplementation 'com.google.dagger:hilt-android-testing:2.36'
//    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.36'//for javaなので不要
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
    kaptTest "com.google.dagger:hilt-android-compiler:2.36"//https://stackoverflow.com/questions/65058281/java-lang-runtimeexception-hilt-classes-generated-from-hiltandroidtest-are-mis

    // shared preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    def jetpack_compose_version = "1.0.1"
    implementation "androidx.compose.ui:ui:$jetpack_compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$jetpack_compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$jetpack_compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$jetpack_compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$jetpack_compose_version"
    implementation "androidx.compose.material:material-icons-extended:$jetpack_compose_version"
    // Integration with activities
    implementation "androidx.activity:activity-compose:1.3.1"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$jetpack_compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$jetpack_compose_version"

    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$jetpack_compose_version"
    testImplementation "androidx.compose.ui:ui-test-junit4:$jetpack_compose_version"

    // When using a AppCompat theme
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'

    def retrofit_version = '2.6.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofit_version}"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    // Moshi
    def moshi_version = '1.8.0'
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    def okhttp_version = '3.10.0'
    testImplementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}
//hilt {
//    enableTransformForLocalTests = true
//}
kapt {
    correctErrorTypes true
}